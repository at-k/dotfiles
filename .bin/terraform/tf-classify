#!/bin/bash
#

function get_rsc_type {
  rsc_name=$1
  rsc_type="misc"

  case $rsc_name in
    *security_group* ) rsc_type="sg" ;;
    *route53* ) rsc_type="route53" ;;
    *waf* ) rsc_type="waf" ;;
    *kms* ) rsc_type="kms" ;;
    *secretmanager* ) rsc_type="secretmanager" ;;
    *aws_lb* ) rsc_type="loadbalancer" ;;
    *-alb* ) rsc_type="loadbalancer" ;;
    *aws_iam* ) rsc_type="iam" ;;
    *aws_db* ) rsc_type="db" ;;
    *aws_ecr* ) rsc_type="ecr" ;;
    *cluster* ) rsc_type="cluster" ;;
    * ) ;;
  esac

  echo $rsc_type
}

function classify {
  rsc_name=$1

  prefix="_"

  stage=$(echo $rsc_name | gsed -e 's/.*\(staging\|production\|development\|integration\|st-\).*/\1/gp;d')
  rsc_type=$(get_rsc_type $rsc_name)

  if [[ -n $stage ]]; then
    echo "$prefix""$stage"-"$rsc_type".tf | sed 's/--/-/g'
  else
    echo "$prefix""$rsc_type".tf
  fi
}

block_list=_block_list
locals_file=_locals.tf
printf "locals {\n"  > $locals_file

# classify
for f in *.tf; do
  echo "Processing $f"

  tmp_file="$f"_tmp

  cat "$f" | sed '$ s/^}$/}\n/g'  > $tmp_file
  cat "$tmp_file" | hcledit block list | grep -e '^module' -e '^data' -e '^resource' | grep -v 'data.terraform_remote_state'| sort | uniq > $block_list

  cat "$tmp_file" | hcledit block get locals | sed -e '/^locals/d' -e '/^}/d' >> $locals_file
  hcledit block rm "locals" --update --file $tmp_file

  while read -r rsc; do
    fname=$(classify $rsc)

    echo "$fname <- $rsc"

    cat "$tmp_file" | hcledit block get "$rsc" >> "$fname"
    hcledit block rm "$rsc" --update --file $tmp_file
  done < $block_list

  rm "$f"
  mv "$tmp_file" "$f"
done

printf "\n}\n" >> $locals_file

# cleanup
# for f in *.tf; do
# done
