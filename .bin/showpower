#!/bin/zsh
#
# show battery remain capacity
#

#set -xeu

mode="std"
bname=`basename $0`

function usage()
{
	echo "usage: $1 [options]"
	echo "	-h         print this usage and exit"
	echo "	-f         set output format"
}

function print_power()
{
	local pow=$1
    local powersupply=$2

	if [ "$mode" = 'std' ]; then
		if [ $pow -ge 80 ]; then
			echo -e '\e[1;31m '$pow' \e[m'
		elif [ $pow -gt 50 ]; then
			echo -e '\e[1;31m '$pow' \e[m'
		elif [ $pow -gt 20 ]; then
			echo -e '\e[1;31m '$pow' \e[m'
		else
			echo -e '\e[1;31m '$pow' \e[m'
		fi
	elif [ "$mode" = "tmux" ]; then
        if [ $powersupply = "true" ]; then
            echo "#[bg=colour002,fg=colour015, bold] ps $pow%"
        elif [ $pow -ge 80 ]; then
			echo "#[bg=colour002,fg=colour015, bold] $pow%"
		elif [ $pow -ge 50 ]; then
			echo "#[bg=colour111,fg=colour117, bold] $pow%"
		elif [ $pow -gt 20 ]; then
			echo "#[bg=colour204,fg=colour199, bold] $pow%"
		else
			echo "#[bg=colour203,fg=colour124, bold] $pow%"
		fi
	else
		echo $pow
	fi
}

function macbook_power_ioreg()
{
	if [ -x "`which ioreg 2> /dev/null`" ]; then
		local full=`ioreg -l | grep Capacity`
		local max=$(echo $full | grep MaxCap  | sed 's/^.*\"MaxCapacity\" = \([0-9]*\)$/\1/' | sed -n '1p')
		local cur=$(echo $full | grep Curr  | sed 's/^.*\"CurrentCapacity\" = \([0-9]*\)$/\1/' | sed -n '1p')

		# echo $full
		# echo $max
		# echo $cur
		local percentage=$(echo "scale=0; 100 * $cur / $max" | bc)
		print_power $percentage
	fi
}

function macbook_power_pmset()
{
	if [ -x "`which pmset 2> /dev/null`" ]; then
        local psinfo=$(pmset -g ps)
		local percentage=$(echo $psinfo | grep -o '[0-9]\+%' | tr -d '%')
		local powersupply=true
        if [[ $psinfo =~ "discharging" ]]; then
            powersupply=false
        fi
		print_power $percentage $powersupply
	fi
}

function macbook_power()
{
	local percentage
	if [ "$1" = "-pm" ]; then
		percentage=$(macbook_power_pmset)
	else
		percentage=$(macbook_power_ioreg)
	fi

	echo $percentage
}

while getopts f:h OPT;
do
	case $OPT in
		"f") mode=${OPTARG} ;;
		"h") usage ${bname}; exit;;
	esac
done

case ${OSTYPE} in
	cygwin|linux*) ;;
	darwin*) macbook_power -pm;;
esac
