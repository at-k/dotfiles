#!/bin/sh
#
# awslogin: aws login utility, which provides a method to switch between onelogin and iam
#

#set -xeu

function usage()
{
	echo "usage: $1 [options]"
	echo "	-h       print this usage and exit"
	echo "	-i       use iam"
	echo "	-o       use onelogin"
	echo "	-r       relogin to onelogin"
	echo "	-p       print current env"
	echo "  -s		   switch role"
}

function print_lastmode()
{
  echo "test"
}

function list_profile()
{
  if [ $# != 1 -a ! -f "$1" ]; then
    echo "error list_profile: history file not found"
  else
    local hist_file=$1
    local ctime=$(date +%s)
    while read line; do
      local prof=$(echo $line | cut -d, -f 1)

      if [ "$prof" = "" ]; then
        continue
      fi

      local expire=$(echo $line | cut -d, -f 2)
      local remain=$(($expire - $ctime))
      if [ $remain -lt 0 ]; then
        remain="x"
      else
        # second to minitus
        remain=$(($remain/60))m
      fi

      echo ${line},${remain}

    done < $hist_file
  fi
}

function switch_profile()
{
  if [ $# -lt 2 ]; then
    echo 'error switch_profile: invalid arg'
  else
    local hist_file=$1
    local prof_file=$2
    local prof_item=""
    if [ $# = 3 ]; then
      # use latest
      prof_item=$(tail -1 $hist_file)
    else
      # select from hist file
      prof_item=$(list_profile $hist_file | peco)
    fi

    if [ "${prof_item}" != "" ]; then
      local prof=$(echo $prof_item | cut -d, -f1)
      local alias=$(echo $prof_item | cut -d, -f3)
      local remain=$(echo $prof_item | cut -d, -f4)

      if [ $remain = 'x' ]; then
        echo "session expired! select again"
        sleep 1
        login_via_onelogin $hist_file
        switch_profile $hist_file $prof_file 1
      else
        echo > $prof_file

        echo "unset AWS_ACCESS_KEY_ID" >> $prof_file
        echo "unset AWS_SECRET_ACCESS_KEY" >> $prof_file
        echo "export AWS_ENABLE_USER=0" >> $prof_file
        echo "export AWS_DEFAULT_PROFILE=$prof" >> $prof_file
        echo "export AWS_PROFILE=$prof" >> $prof_file
        echo "export AWS_DEFAULT_REGION=ap-northeast-1" >> $prof_file
        echo "export AWS_PROFILE_ALIAS=$alias" >> $prof_file
      fi
    fi
  fi
}

function get_current()
{
  if [ "$AWS_ENABLE_USER" = 1 ]; then
    echo "iam"
  else
    remain="none"
    if [ $# -gt 0 ]; then
      hist_file=$1
      remain=$(list_profile $hist_file | grep $AWS_PROFILE_ALIAS | cut -d, -f4)
    fi
    echo $AWS_PROFILE_ALIAS.$remain
  fi
}

function clear_env()
{
  for fn in `env | grep AWS`;do
    key=$(echo $fn | cut -d= -f1) && unset $key
  done
}

function login_via_onelogin()
{
  if [ $# -lt 1 ]; then
    echo 'error login_via_onelogin: invalid arg'
    exit
  fi

  local histfile=$1

  unset AWS_DEFAULT_PROFILE
  unset AWS_PROFILE

  local conf=$(grep "^\[" ~/.onelogin-aws.config | sed 's/\[\(.*\)\]/\1/'|peco)
  if [ "$conf" = "" ]; then
    echo "error: get conf"
    exit 1
  fi
  local duration=$(grep -A6 $conf ~/.onelogin-aws.config | grep duration | head -1 | awk -F'=' '{print $2}')

  local output=$(onelogin-aws-login -C $conf | tee /dev/stderr)
  local check=$(echo $output | grep "profile")
  if [ "$check" = "" ]; then
    echo "error: fail to login"
    exit 1
  fi

  local profile=$(echo $output | sed 's/^.*profile \(.*\)$/\1/' | sed 's///')
  local rolename=$(echo $profile | cut -d/ -f2)

  if [ "$profile" != "" -a "$rolename" != "" ]; then
    # local maxduration=$(aws iam get-role --profile $profile --role-name $rolename  | jq -r '.Role.MaxSessionDuration')
    local expire_time=$(echo $(date +%s) + $duration | bc)

    sed "/$conf/d" $histfile > /tmp/awslogin_tmp && mv /tmp/awslogin_tmp $histfile
    echo ${profile},${expire_time},$conf >> $histfile
  else
    echo "error: login error"
    exit 1
  fi
}

function use_iam()
{
   if [ $# -lt 1 ]; then
    echo 'error use_iam: invalid arg'
    exit
  fi

  local aws_prof_file=$1

  echo "export AWS_ENABLE_USER=1" > $aws_prof_file
}



bname=`basename $0`
rcfile=~/.zshrc.aws.local
cache=~/.cache/aws_profiles
ONELOGIN_EXPIRED_SEC=10800

while getopts iorspluh OPT;
do
	case $OPT in
		"i") use_iam $rcfile; exit;;
		"s") switch_profile $cache $rcfile; exit;;
		"r")
      login_via_onelogin $cache
      switch_profile $cache $rcfile 1
      exit;;
		"p") get_current $cache; exit;;
    'l') list_profile $cache; exit;;
    'u') clear_env; exit;;
		"h") usage ${bname}; exit;;
    '?') usage ${bname}; exit;;
	esac
done

# default action
switch_profile $cache $rcfile

