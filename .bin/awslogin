#!/bin/sh
#
# awslogin: aws login utility, which provides a method to switch between onelogin and iam
#

#set -xeu

function usage()
{
	echo "usage: $1 [options]"
	echo "	-h         print this usage and exit"
	echo "	-i         use iam"
	echo "	-o         use onelogin"
	echo "	-r         relogin to onelogin"
	echo "	-p         print current env"
	echo "  -s		   silent mode"
}

function print_curmode()
{
	if [ "${curmode}" = "iam" ]; then
		echo ${curmode}
	else
		ctime=$(date +%s)
		remain=$(echo "$ONELOGIN_EXPIRED_SEC - ($ctime - $ltime)" | bc)
		if [ $remain -lt 0 ]; then
			echo ${curmode}"-expire"
		else
			echo ${curmode}"-$remain"
		fi
	fi
}

bname=`basename $0`

MODE_O=saml
MODE_I=iam

mode=""
ltime=""
relog=0

silent=0

rcfile=~/.zshrc.local
ONELOGIN_EXPIRED_SEC=10800
# aws iam get-role --role-name freee-sso-admin | grep Duration

sed_cmd=""
case ${OSTYPE} in
	cygwin|linux*) sed_cmd='sed -i' ;;
	darwin*)       sed_cmd='sed -i ""' ;;
esac

curmode_tmp=$(sed -n 's/use_onelogin=\(.*\)$/\1/p' ${rcfile})
if [ ${curmode_tmp} = 1 ]; then
	curmode=${MODE_O}
else
	curmode=${MODE_I}
fi
ltime=$(sed -n 's/aws_last_onelogin=\(.*\)/\1/p' ${rcfile})

while getopts iorsph OPT;
do
	case $OPT in
		"i") mode=${MODE_I};;
		"o") mode=${MODE_O};;
		"r") relog=1;;
		"s") silent=1;;
		"p") print_curmode; exit;;
		"h") usage ${bname}; exit;;
	esac
done

if [ "${mode}" = "" ]; then
	mode=${curmode}
	if [ "${silent}" != 1 ]; then
		echo "** ${bname}: keep login mode ${curmode}"
	fi
else
	if [ "${silent}" != 1 ]; then
		echo "** ${bname}: switch login mode ${curmode} -> ${mode}"
	fi
fi

if [ ${mode} = ${MODE_I} ]; then
	eval '${sed_cmd} "s/use_onelogin=[0,1]/use_onelogin=0/" ${rcfile}'
else
	ctime=$(date +%s)
	laps=$(echo "$ctime - $ltime" | bc)

	if [ $laps -gt $ONELOGIN_EXPIRED_SEC ]; then
		relog=1
	fi

	eval '${sed_cmd} "s/use_onelogin=[0,1]/use_onelogin=1/" ${rcfile}'

	if [ ${relog} = 1 ]; then

    output=$(onelogin-aws-login -d $ONELOGIN_EXPIRED_SEC | tee /dev/stderr)

		if [ $? != 0 ]; then
			exit 1
		fi

		profile=$(echo $output | sed 's/^.*profile \(.*\)$/\1/' | sed 's///')

		eval '${sed_cmd} "s/aws_last_onelogin=.*$/aws_last_onelogin="${ctime}"/" ${rcfile}'
		eval '${sed_cmd} "s:AWS_DEFAULT_PROFILE=\(.*\)$:AWS_DEFAULT_PROFILE="${profile}":" ${rcfile}'
	fi
fi

