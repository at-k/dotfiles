#!/bin/sh
#
# issh: wrapper for lshost providing interactive ssh
#

#set -xeu
set -u

function usage()
{
	echo "usage: $1 [options]"
	echo "	-h         print this usage and exit"
	echo "	-f         set filter for lshost"
	echo "	-u         update host cache file"
	echo "	-s         choose from history"
}

filter=""
update=0
hist=0
bname=`basename $0`
hfile=~/.cache/isshhists
envfile=~/.sshrc.d/.env
histsize=10

lshost=lsaws

while getopts usf:h OPT;
do
	case $OPT in
		"f") filter="$OPTARG";;
		"u") update=1;;
		"s") hist=1;;
		"h") usage ${bname}; exit;;
	esac
done

if [ ! -x "`which ${lshost} 2> /dev/null`" ]; then
	echo "error: ${lshost} not found" >&2
	exit 1
fi

if [ ! -x "`which peco 2> /dev/null`" ]; then
	echo "error: peco not found" >&2
	exit 1
fi

if [ $hist = 0 ]; then
	if [ $update = 1 ]; then
		tgt_server=$(${lshost} -u -l ${filter} | peco)
	else
		tgt_server=$(${lshost} -l ${filter} | peco)
	fi
else
	tgt_server=$(cat $hfile | peco)
fi

# ipaddr=$(echo ${tgt_server} | sed 's/^.* \(10\.[0-9]*\.[0-9]*\.[0-9]*\) .*$/\1/')
instid=$(echo ${tgt_server} | cut -d"," -f 1 | sed 's/ *//g')
role=$(echo ${tgt_server} | cut -d"," -f 3 | sed 's/ *//g')
ipaddr=$(echo ${tgt_server} | cut -d"," -f 4 | sed 's/ *//g')
stage=$(echo ${tgt_server} | cut -d"," -f 6 | sed 's/ *//g')

if [ $? -eq 0 -a "${ipaddr}" != "" ]; then
	echo "** [${bname}] target: ${tgt_server}"

	sed -i '' '/^"${instid}"/d' $hfile
	echo ${tgt_server} >> $hfile

	sed -i '' "s/AWS_ROLE_NAME=.*$/AWS_ROLE_NAME="${role}"/" ${envfile}
	sed -i '' "s/AWS_STAGE_NAME=.*$/AWS_STAGE_NAME="${stage}"/" ${envfile}

	if [ `wc -l < $hfile` -gt $histsize ]; then
		sed -i '' '1d' $hfile
	fi

	if [ -x "`which sshrc 2> /dev/null`" ]; then
		echo "** [${bname}] sshrc to: ${ipaddr}"
		sshrc ${ipaddr}
	else
		echo "** [${bname}] ssh to: ${ipaddr}"
		ssh ${ipaddr}
	fi
fi
