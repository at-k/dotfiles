# lsp related plugins --
[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
  let g:asyncomplete_log_file = expand('~/.vim/log/asyncomplete.log')
'''
# on_ft = ['autohotkey', 'autoit', 'cfg', 'git', 'go', 'groovy', 'java', 'javascript', 'python', 'snippet', 'toml', 'vim', 'vb', 'xsl']
# hook_add = '''
#   " let g:asyncomplete_log_file = expand('~/.vim/.asyncomplete/log.log')
#   let g:asyncomplete_enable_for_all = 0
#   autocmd completion FileType autohotkey,autoit,cfg,git,go,groovy,java,javascript,python,snippet,toml,vim,vb,xsl call asyncomplete#enable_for_buffer()
# '''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-buffer.vim'
# on_ft = ['autohotkey', 'autoit', 'cfg', 'git', 'go', 'groovy', 'java', 'javascript', 'python', 'snippet', 'toml', 'vim', 'vb', 'xsl']
# hook_source = '''
#   autocmd completion User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#buffer#get_source_options({
#      \ 'name': 'buffer',
#      \ 'priority': 5,
#      \ 'whitelist': ['*'],
#      \ 'completor': function('asyncomplete#sources#buffer#completor'),
#      \ }))
# '''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
# on_ft = ['autohotkey', 'autoit', 'cfg', 'git', 'go', 'groovy', 'java', 'javascript', 'python', 'snippet', 'toml', 'vim', 'vb', 'xsl']
# hook_source = '''
#   autocmd completion User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
#       \ 'name': 'file',
#       \ 'priority': 3,
#       \ 'whitelist': ['*'],
#       \ 'completor': function('asyncomplete#sources#file#completor'),
#       \ }))
# '''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
on_ft = ['python', 'go']
depends = ['asyncomplete.vim', 'vim-lsp']

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  let g:lsp_log_verbose = 0
  " let g:lsp_log_file = expand('~/.vim/log/vim-lsp.log')
  let g:lsp_log_file = ""

  let g:lsp_settings_servers_dir = expand('~/.config/vim-lsp')
  if executable('pyls')
    autocmd completion User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'whitelist': ['python'],
        \ })
  endif
  if executable('gopls')
    autocmd completion User lsp_setup call lsp#register_server({
        \ 'name': 'gopls',
        \ 'cmd': {server_info->['gopls']},
        \ 'whitelist': ['go'],
        \ })
    autocmd completion FileType go setlocal omnifunc=lsp#complete
    autocmd completion BufWritePre *.go LspDocumentFormatSync
  endif
  if executable('solargraph')
      " gem install solargraph
    autocmd completion User lsp_setup call lsp#register_server({
        \ 'name': 'solargraph',
        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
        \ 'initialization_options': {"diagnostics": "true"},
        \ 'whitelist': ['ruby'],
        \ })
  endif
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'mattn/vim-lsp-icons'

[[plugins]]
repo = 'mattn/vim-goimports'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
# --
